{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "WMATA Rail Station Information",
        "description": "Rail line and station information, including locations, fares, times, and parking.",
        "termsOfService": ""
    },
    "servers": [
        "httpsapi.wmata.com\/Rail.svc"
    ],
    "paths": {
        "\/json\/jLines": {
            "get": {
                "summary": "JSON - Lines",
                "description": "Description\r\n\r\nReturns information about all rail lines.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nLines\r\n\r\n\r\nArray containing line information (Line).\r\n\r\n\r\n\r\n\r\n\r\n\r\nLine Elements\r\n\r\n\r\n\r\n\r\n\r\nDisplayName\r\n\r\nFull name of line color.\r\n\r\n\r\n\r\nEndStationCode\r\n\r\nEnd station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.\r\n\r\n\r\n\r\nInternalDestination1\r\n\r\nI",
                "operationId": "GetJsonJlines",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/json\/jStationParking": {
            "get": {
                "summary": "JSON - Parking Information",
                "description": "Description\n\nReturns parking information at a station based on a given StationCode. Omit\nthe StationCode to return parking information for all stations.\n\nIf a station has no parking, the StationsParking element will contain no\nchild elements.\n\nResponse Elements\n\n\n\n\nElement\n\nDescription\n\n\n\n\n\nStationsParking\n\n\nArray containing station parking information (StationParking).\n\n\n\n\n\n\nStationParking\nElements\n\n\n\n\n\nCode\n\nStation code. Useful when returning parking information for all\nstations. Use this val",
                "operationId": "GetJsonJstationparking",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "StationCode",
                        "in": "query",
                        "description": "Station code.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/json\/jPath": {
            "get": {
                "summary": "JSON - Path Between Stations",
                "description": "Description\r\n\r\nReturns a set of ordered stations and distances between two stations on the\r\nsame line.\r\n\r\nNote that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nPath\r\n\r\n\r\nArray containing path details (MetroPathItem)\r\n\r\n\r\n\r\n\r\n\r\n\r\nMetroPathItem\r\nElements\r\n\r\n\r\n\r\n\r\n\r\nDistanceToPrev\r\n\r\nDistance in feet to the previous station in the list.\r\n\r\n\r\n\r\nLineCode\r\n\r\nTwo-letter abbreviation for the line (e.g",
                "operationId": "GetJsonJpath",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "FromStationCode",
                        "in": "query",
                        "description": "Station code for the origin station.  Use the Station List method to return a list of all station codes."
                    },
                    {
                        "name": "ToStationCode",
                        "in": "query",
                        "description": "Station code for the destination station.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/json\/jStationEntrances": {
            "get": {
                "summary": "JSON - Station Entrances",
                "description": "Description\r\n\r\nReturns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nEntrances\r\n\r\n\r\nArray containing detailed information about station entrances\r\n(StationEntrance).\r\n\r\n\r\n\r\n\r\n\r\n\r\nStationEntrance Elements\r\n\r\n\r\n\r\n\r\n\r\nDescription\r\n\r\nAdditional information for the entrance, if available.\r\nCurrently available data usually shows the same value",
                "operationId": "GetJsonJstationentrances",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Lat",
                        "in": "query",
                        "description": "Center point Latitude, required if Longitude and Radius are specified."
                    },
                    {
                        "name": "Lon",
                        "in": "query",
                        "description": "Center point Longitude, required if Latitude and Radius are specified."
                    },
                    {
                        "name": "Radius",
                        "in": "query",
                        "description": "Radius (meters) to include in the search area, required if Latitude and Longitude are specified."
                    }
                ]
            }
        },
        "\/json\/jStationInfo": {
            "get": {
                "summary": "JSON - Station Information",
                "description": "Description\r\n\r\nReturns station location and address information based on a given\r\nStationCode.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nAddress\r\n\r\n\r\nStructure describing address information.\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nStation code. Repeated from input.\r\n\r\n\r\n\r\nLat\r\n\r\nLatitude.\r\n\r\n\r\n\r\nLineCode1\r\n\r\nTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.\r\n\r\n\r\n\r\nLineCode2\r\n\r\nAdditional line served by this station. This is often the case\r\nwhen stati",
                "operationId": "GetJsonJstationinfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "StationCode",
                        "in": "query",
                        "description": "Station code.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/json\/jStations": {
            "get": {
                "summary": "JSON - Station List",
                "description": "Description\r\n\r\nReturns a list of station location and address information based on a given\r\nLineCode. Omit the LineCode to return all stations. The response is an array of\r\nobjects identical to those returned in the Station Information method.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nStations\r\n\r\n\r\nArray containing station information (Station).\r\n\r\n\r\n\r\n\r\n\r\n\r\nStation Elements\r\n\r\n\r\n\r\n\r\n\r\nAddress\r\n\r\n\r\nStructure describing address information.\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nStation code. Rep",
                "operationId": "GetJsonJstations",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "LineCode",
                        "in": "query",
                        "description": "Two-letter line code abbreviation:\n\n<ul>\n<li>RD - Red<\/li>\n<li>YL - Yellow<\/li>\n<li>GR - Green<\/li>\n<li>BL - Blue<\/li>\n<li>OR - Orange<\/li>\n<li>SV - Silver<\/li>\n<\/ul>"
                    }
                ]
            }
        },
        "\/json\/jStationTimes": {
            "get": {
                "summary": "JSON - Station Timings",
                "description": "Description\r\n\r\nReturns opening and scheduled first\/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.\r\n\r\nNote that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nStationTimes\r\n\r\n\r\nArray containing station timing information (St",
                "operationId": "GetJsonJstationtimes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "StationCode",
                        "in": "query",
                        "description": "Station code.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/json\/jSrcStationToDstStationInfo": {
            "get": {
                "summary": "JSON - Station to Station Information",
                "description": "Description\r\n\r\nReturns a distance, fare information, and estimated travel time between any\r\ntwo stations, including those on different lines. Omit both parameters to\r\nretrieve data for all stations.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nStationToStationInfos\r\n\r\n\r\nArray containing station to station information (StationToStationInfo).\r\n\r\n\r\n\r\n\r\n\r\n\r\nStationToStationInfo Elements\r\n\r\n\r\n\r\n\r\n\r\nCompositeMiles\r\n\r\nDistance in miles from the source to destination station.\r\n\r\n\r\n\r\nD",
                "operationId": "GetJsonJsrcstationtodststationinfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "FromStationCode",
                        "in": "query",
                        "description": "Station code for the origin station.  Use the Station List method to return a list of all station codes."
                    },
                    {
                        "name": "ToStationCode",
                        "in": "query",
                        "description": "Station code for the destination station.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/Lines": {
            "get": {
                "summary": "XML - Lines",
                "description": "Description\r\n\r\nReturns information about all rail lines.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nLines\r\n\r\n\r\nArray containing line information (Line).\r\n\r\n\r\n\r\n\r\n\r\n\r\nLine Elements\r\n\r\n\r\n\r\n\r\n\r\nDisplayName\r\n\r\nFull name of line color.\r\n\r\n\r\n\r\nEndStationCode\r\n\r\nEnd station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.\r\n\r\n\r\n\r\nInternalDestination1\r\n\r\nI",
                "operationId": "GetLines",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/StationParking": {
            "get": {
                "summary": "XML - Parking Information",
                "description": "Description\n\nReturns parking information at a station based on a given StationCode. Omit\nthe StationCode to return parking information for all stations.\n\nIf a station has no parking, the StationsParking element will contain no\nchild elements.\n\nResponse Elements\n\n\n\n\nElement\n\nDescription\n\n\n\n\n\nStationsParking\n\n\nArray containing station parking information (StationParking).\n\n\n\n\n\n\nStationParking\nElements\n\n\n\n\n\nCode\n\nStation code. Useful when returning parking information for all\nstations. Use this val",
                "operationId": "GetStationparking",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "StationCode",
                        "in": "query",
                        "description": "Station code.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/Path": {
            "get": {
                "summary": "XML - Path Between Stations",
                "description": "Description\r\n\r\nReturns a set of ordered stations and distances between two stations on the\r\nsame line.\r\n\r\nNote that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nPath\r\n\r\n\r\nArray containing path details (MetroPathItem)\r\n\r\n\r\n\r\n\r\n\r\n\r\nMetroPathItem\r\nElements\r\n\r\n\r\n\r\n\r\n\r\nDistanceToPrev\r\n\r\nDistance in feet to the previous station in the list.\r\n\r\n\r\n\r\nLineCode\r\n\r\nTwo-letter abbreviation for the line (e.g",
                "operationId": "GetPath",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "FromStationCode",
                        "in": "query",
                        "description": "Station code for the origin station.  Use the Station List method to return a list of all station codes."
                    },
                    {
                        "name": "ToStationCode",
                        "in": "query",
                        "description": "Station code for the destination station.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/StationEntrances": {
            "get": {
                "summary": "XML - Station Entrances",
                "description": "Description\r\n\r\nReturns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nEntrances\r\n\r\n\r\nArray containing detailed information about station entrances\r\n(StationEntrance).\r\n\r\n\r\n\r\n\r\n\r\n\r\nStationEntrance Elements\r\n\r\n\r\n\r\n\r\n\r\nDescription\r\n\r\nAdditional information for the entrance, if available.\r\nCurrently available data usually shows the same value",
                "operationId": "GetStationentrances",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Lat",
                        "in": "query",
                        "description": "Center point Latitude, required if Longitude and Radius are specified."
                    },
                    {
                        "name": "Lon",
                        "in": "query",
                        "description": "Center point Longitude, required if Latitude and Radius are specified."
                    },
                    {
                        "name": "Radius",
                        "in": "query",
                        "description": "Radius (meters) to include in the search area, required if Latitude and Longitude are specified."
                    }
                ]
            }
        },
        "\/StationInfo": {
            "get": {
                "summary": "XML - Station Information",
                "description": "Description\r\n\r\nReturns station location and address information based on a given\r\nStationCode.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nAddress\r\n\r\n\r\nStructure describing address information.\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nStation code. Repeated from input.\r\n\r\n\r\n\r\nLat\r\n\r\nLatitude.\r\n\r\n\r\n\r\nLineCode1\r\n\r\nTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.\r\n\r\n\r\n\r\nLineCode2\r\n\r\nAdditional line served by this station. This is often the case\r\nwhen stati",
                "operationId": "GetStationinfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "StationCode",
                        "in": "query",
                        "description": "Station code.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/Stations": {
            "get": {
                "summary": "XML - Station List",
                "description": "Description\r\n\r\nReturns a list of station location and address information based on a given\r\nLineCode. Omit the LineCode to return all stations. The response is an array of\r\nobjects identical to those returned in the Station Information method.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nStations\r\n\r\n\r\nArray containing station information (Station).\r\n\r\n\r\n\r\n\r\n\r\n\r\nStation Elements\r\n\r\n\r\n\r\n\r\n\r\nAddress\r\n\r\n\r\nStructure describing address information.\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nStation code. Rep",
                "operationId": "GetStations",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "LineCode",
                        "in": "query",
                        "description": "Two-letter line code abbreviation:\n\n<ul>\n<li>RD - Red<\/li>\n<li>YL - Yellow<\/li>\n<li>GR - Green<\/li>\n<li>BL - Blue<\/li>\n<li>OR - Orange<\/li>\n<li>SV - Silver<\/li>\n<\/ul>"
                    }
                ]
            }
        },
        "\/StationTimes": {
            "get": {
                "summary": "XML - Station Timings",
                "description": "Description\r\n\r\nReturns opening and scheduled first\/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.\r\n\r\nNote that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nStationTimes\r\n\r\n\r\nArray containing station timing information (St",
                "operationId": "GetStationtimes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "StationCode",
                        "in": "query",
                        "description": "Station code.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        },
        "\/SrcStationToDstStationInfo": {
            "get": {
                "summary": "XML - Station to Station Information",
                "description": "Description\r\n\r\nReturns a distance, fare information, and estimated travel time between any\r\ntwo stations, including those on different lines. Omit both parameters to\r\nretrieve data for all stations.\r\n\r\nResponse Elements\r\n\r\n\r\n\r\n\r\nElement\r\n\r\nDescription\r\n\r\n\r\n\r\n\r\n\r\nStationToStationInfos\r\n\r\n\r\nArray containing station to station information (StationToStationInfo).\r\n\r\n\r\n\r\n\r\n\r\n\r\nStationToStationInfo Elements\r\n\r\n\r\n\r\n\r\n\r\nCompositeMiles\r\n\r\nDistance in miles from the source to destination station.\r\n\r\n\r\n\r\nD",
                "operationId": "GetSrcstationtodststationinfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "FromStationCode",
                        "in": "query",
                        "description": "Station code for the origin station.  Use the Station List method to return a list of all station codes."
                    },
                    {
                        "name": "ToStationCode",
                        "in": "query",
                        "description": "Station code for the destination station.  Use the Station List method to return a list of all station codes."
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": []
    }
}